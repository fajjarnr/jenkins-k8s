pipeline {
    agent {
        kubernetes {
            yaml '''
apiVersion: v1
kind: Pod  # <-------- pod where jenkins slave agent container (jnlp-slave) will be running
spec:
  serviceAccountName: jenkins # this is for IRSA (IAM role for service account)
  containers:
  - name: docker # <---------- docker client
    image: docker:19.03.1
    command:
    - sleep
    args:
    - 99d
    env:
      - name: DOCKER_HOST
        value: tcp://localhost:2375
  - name: docker-aws-cli # <----------- add new docker image name
    image: 266981300450.dkr.ecr.ap-southeast-1.amazonaws.com/test-jenkins:docker-aws # <----- docker image you pushed to ECR
    env:
      - name: DOCKER_HOST
        value: tcp://localhost:2375
  - name: docker-daemon
    image: docker:19.03.1-dind # <-------- special image tag
    securityContext:
      privileged: true
    env:
      - name: DOCKER_TLS_CERTDIR
        value: ""
'''
            defaultContainer 'docker'
        }
    }

    environment {
      ECR_REPO_URI = "266981300450.dkr.ecr.ap-southeast-1.amazonaws.com/test-jenkins"
      AWS_REGION = "ap-southeast-1"
    }

    stages {
        stage('Build Docker Image') {
            steps {
                 git url: 'https://github.com/ianmiell/simple-dockerfile.git'
                    
                container('docker') {  // <-- specify which container in the pod YAML to run below as a host container
                    sh '''
                        docker version
                        docker ps -a
                        docker build --tag custom_image_1 .

                        echo "docker ps from inside the container"
                        docker ps -a
                        docker images
                    '''
                } // container
            } // steps
        } // stage

        stage('Push Docker Image') {
            steps {
                 git url: 'https://github.com/ianmiell/simple-dockerfile.git'
                    
                container('docker-aws-cli') {  // <-- specify which container in the pod YAML to run below as a host container
                    sh '''
                        docker version
                        docker images

                        docker tag custom_image_1 ${ECR_REPO_URI}:custom_image_1

                        # get ECR password
                        ecr_password=$(aws ecr get-login-password --region ${AWS_REGION})

                        # login to ecr repo using docker login
                        echo ${ecr_password} | docker login \
                                                          --username AWS \
                                                          --password-stdin \
                                                          ${ECR_REPO_URI}

                        # push
                        docker push ${ECR_REPO_URI}:custom_image_1
                    '''
                } // container
            } // steps
        } // stage
    } // stages
} // pipeline